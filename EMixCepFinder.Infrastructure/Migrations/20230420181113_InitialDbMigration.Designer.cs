// <auto-generated />
using EMixCepFinder.Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMixCepFinder.Infrastructure.Migrations
{
    [DbContext(typeof(AddressInfoContext))]
    [Migration("20230420181113_InitialDbMigration")]
    partial class InitialDbMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMixCepFinder.Domain.Model.AddressInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Localidade");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Complemento");

                    b.Property<string>("GIA")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Gia");

                    b.Property<int>("IBGE")
                        .HasColumnType("int")
                        .HasColumnName("Ibge");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Bairro");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(9)")
                        .HasColumnName("Cep");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .HasColumnName("UF");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Logradouro");

                    b.Property<long>("Unit")
                        .HasColumnType("bigint")
                        .HasColumnName("Unidade");

                    b.HasKey("Id");

                    b.HasIndex("PostalCode")
                        .IsUnique();

                    b.ToTable("CEP");
                });
#pragma warning restore 612, 618
        }
    }
}
